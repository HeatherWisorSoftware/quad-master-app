@page "/MemberPages/AddMember"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@inject TournamentContext DbContext
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<PageTitle>Add New Player</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudText Typo="Typo.h3" Class="mb-4" Style="color: var(--mud-palette-primary)">Add New Member</MudText>

    @if (!string.IsNullOrEmpty(ValidationErrors))
    {
        <MudAlert Severity="Severity.Error" Class="mb-4">@ValidationErrors</MudAlert>
    }

    <MudPaper Elevation="3" Class="pa-4 mb-4">
        <EditForm Model="@player" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <MudGrid>
                <MudItem xs="12">
                    <MudText Typo="Typo.h5" Class="mb-4">Player Details</MudText>
                </MudItem>

                <MudItem xs="12" md="6">
                    <MudTextField Label="First Name" @bind-Value="player.FirstName"
                                  Required RequiredError="First name is required"
                                  For="@(() => player.FirstName)" />
                </MudItem>

                <MudItem xs="12" md="6">
                    <MudTextField Label="Last Name" @bind-Value="player.LastName"
                                  Required RequiredError="Last name is required"
                                  For="@(() => player.LastName)" />
                </MudItem>

                <MudItem xs="12" md="6">
                    <MudTextField T="int" Label="Ranking" @bind-Value="player.Ranking"
                                  Required RequiredError="Ranking is required"
                                  For="@(() => player.Ranking)" />
                </MudItem>

                <MudItem xs="12" md="6">
                    <MudTextField Label="Email" @bind-Value="player.Email"
                                  Required RequiredError="Email is required"
                                  For="@(() => player.Email)"
                                  InputType="InputType.Email" />
                </MudItem>

                <MudItem xs="12" Class="d-flex justify-start mt-6">
                    <MudButton ButtonType="ButtonType.Submit"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               Size="Size.Large"
                               Class="mr-4">
                        Save Player
                    </MudButton>
                </MudItem>
            </MudGrid>
        </EditForm>
    </MudPaper>

    @if (IsSaved)
    {
        <MudPaper Elevation="3" Class="pa-4 mt-4">
            <MudText Typo="Typo.h5" Class="mb-4">Player Summary</MudText>

            <MudGrid>
                <MudItem xs="12">
                    <MudCard Elevation="2" Class="mb-4">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6" Color="Color.Primary">Player Details</MudText>
                            </CardHeaderContent>
                            <CardHeaderActions>
                                <MudIcon Icon="@Icons.Material.Filled.Person" Color="Color.Primary" />
                            </CardHeaderActions>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudList T="string">
                                <MudListItem>
                                    <MudText><b>Name:</b> @player.FirstName @player.LastName</MudText>
                                </MudListItem>
                                <MudListItem>
                                    <MudText><b>Ranking:</b> @player.Ranking</MudText>
                                </MudListItem>
                                <MudListItem>
                                    <MudText><b>Email:</b> @player.Email</MudText>
                                </MudListItem>
                            </MudList>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </MudPaper>
    }

    <MudPaper Elevation="0" Class="pa-4 mt-4 d-flex justify-end">
        <MudButton Variant="Variant.Text"
                   Color="Color.Primary"
                   OnClick="ReturnToList"
                   StartIcon="@Icons.Material.Filled.ArrowBack">
            Back to Players
        </MudButton>
    </MudPaper>
</MudContainer>

@code {
    private Player player = new Player();
    private string ValidationErrors { get; set; } = string.Empty;
    private bool IsSaved { get; set; } = false;

    protected override void OnInitialized()
    {
        // Initialize a new player
        player = new Player();
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            // Add new player
            DbContext.Players.Add(player);
            await DbContext.SaveChangesAsync();

            // Show success message
            Snackbar.Add("Player added successfully", Severity.Success);
            IsSaved = true;
        }
        catch (Exception ex)
        {
            ValidationErrors = $"Error saving player: {ex.Message}";
            Snackbar.Add("Error saving player", Severity.Error);
        }
    }

    private void ReturnToList()
    {
        NavigationManager.NavigateTo("/MemberPages/MemberView");
    }
}